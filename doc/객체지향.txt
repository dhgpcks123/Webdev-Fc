객체지향이란?
    1. 객체지향의 등장
        객체지향의 개념은 1970년대에 들어서 용어가 나왔으며, 이는 벌써 50년이 넘어가는 역사를 가지고 있다.

        하지만 이전에는 C언어처럼 실행하고자 하는 순서대로 명령어를 입력해서 실행되는 "절차 지향"이 주를 이뤘으며,
        이러한 방법으로 코딩하는 언어들을 "절차지향 언어"라고 합니다.

        프로그램 단위가 크지 않았고, 대체적으로 간단한 logic을 순차적으로 처리하여 결과를 얻었음.
        프로그램 복잡해지면서 유지보수, 개발기간 비효율적!

        효과적인 개발방식! 객체지향

        ★객체지향의 특성은 추상화, 상속, 은닉, 재사용, 인터페이스

        실 사물 모델링 -> 행위와 속성을 정의, 실제 사물이 동작하는 방식으로 설계
        사물 -> Object(객체), 행위 -> Method(메서드), 속성 Variable(변수)

        Java. Sun Microsystems->Oracle 객체지향 언어 등장. 1955
        가비지 컬렉터, JVM(운영체제 독립적)!

    2. 객체 설계하기
        객체, 행위, 속성으로 나눠서 설계하도록 한다.
        객체 - 자동차
        행위 - 자동차 이름, 번호, 등록년월, 모델명
        속성 - 주행거리, 연비계산, 번호교체, 등록증갱신

        객체의 3가지 요소!
        -   상태 유지 (객체의 상태)
            객체는 상태 정보를 저장, 유지되어야 함.
            속성은 변수로 정의됨.
            속성값이 바뀌면서, 객체의 상태가 변경되어야 한다.
        -   기능 제공 (객체의 책임)
            객체는 기능 제공. Method의 제공으로.
            캡슐화와 연관. 외부로부터 직접 속성에 접근하여 변경하지 않고 객체가 제공하는 Method로 기능 제공(Getter, Setter)
        -   고유 식별자 제공 (객체의 유일성)
            각각 객체는 고유한 식별자.
            DB의 Unique Key, 또는 Primary Key로 작성 가능

    3. 물리 객체와 개념 객체
        물리객체 - 물리적 객체는 실제로 사물 존재, 이를 클래스로 정의한 객체.
        ex)자동차 렌탈 시스템 : 자동차, 고객, 직원, 사업장, 정비소 등등
           급여 관리 시스템 : 직원, 월급통장 등등
           Pc방 관리 시스템 : pc, 직원, 공간, 책상, 의자

        개념 객체 - Service에 해당. business logic을 처리하는 부분
            Business logic에서는 여러 객체를 서로 상호작용 하도록 하며, 객체가 제공하는 오퍼레이션(method)를 통하여 객체의 속성 변경

        ex)
        사용자 관리 시스템
            - 사용자 객체의 마지막 접속일자를 이용하여 계정만료, 비밀번호 초기화, 재등록 처리 등등
        ATM 시스템
            - 사용자의 Action에 따라 계좌(Object)의 잔고 속성 변경

        객체 기능 정의. business logic 처리하는 Service에서 Method를 활용하여 여러 조건 확인하여 객체 변경이 주된 업무.
        객체의 속성 변경하거나 상태 변경할 수 있는 오퍼레이션(method)를 잘 정의해줘야 할 것!